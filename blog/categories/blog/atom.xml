<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | Zealot09's Blog]]></title>
  <link href="http://zealot09.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://zealot09.github.io/"/>
  <updated>2017-07-16T21:46:57+08:00</updated>
  <id>http://zealot09.github.io/</id>
  <author>
    <name><![CDATA[zealot09]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[redux react boilerplate]]></title>
    <link href="http://zealot09.github.io/blog/2016/02/18/react-redux/"/>
    <updated>2016-02-18T15:02:52+08:00</updated>
    <id>http://zealot09.github.io/blog/2016/02/18/react-redux</id>
    <content type="html"><![CDATA[<p>Long time no articles.
Last one year working on html5 apps, hybrid apps, using backbone. Faced some problems with backbone, I thought more about frontend.
several problems below with backbone</p>

<h3>1. backbone model is weak and error-prone in complex projects</h3>

<p>when model is listened in many views like the <code>accountModel</code>, you can&rsquo;t imagine what things will happen， it&rsquo;s terrible.</p>

<h3>2. missing data binding</h3>

<p>this leads to every change should update view manual, it&rsquo;s too disgusting.</p>

<h3>3. hard to test</h3>

<p>backbone&rsquo;s event driven makes developer manipulate DOMs themselves，It&rsquo;s hard to test.</p>

<h3>4. code reuse</h3>

<p>code can&rsquo;t reuse effictively because of manipulating DOMs</p>

<p>Compared to react and the idea of flux, a new frontend technology stack comes.
React is an awesome MVC View framework, and the flux programming idea is also greatly decoupling business which the above first problem can be solved.</p>

<p>Here is a redux and react demo - <a href="https://github.com/zealot09/LianExchange">LianExchange</a></p>

<h2>1. redux provide store with react</h2>

<p>react router using history, the entry just bind redux store and react router, using history to enable router, using Provider to bind store with react
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">Provider</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">react</span><span class="o">-</span><span class="nx">redux</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">Router</span><span class="p">,</span> <span class="nx">Route</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">react</span><span class="o">-</span><span class="nx">router</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">createHistory</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">history</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">import</span> <span class="nx">App</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;.</span><span class="o">/</span><span class="nx">containers</span><span class="o">/</span><span class="nx">App</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">Buy</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;.</span><span class="o">/</span><span class="nx">containers</span><span class="o">/</span><span class="nx">Buy</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">import</span> <span class="nx">configure</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;.</span><span class="o">/</span><span class="nx">store</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">configure</span><span class="p">()</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">history</span> <span class="o">=</span> <span class="nx">createHistory</span><span class="p">()</span>
</span><span class='line'><span class="nx">syncReduxAndRouter</span><span class="p">(</span><span class="nx">history</span><span class="p">,</span> <span class="nx">store</span><span class="p">)</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">//if you just want route with hash, just</span>
</span><span class='line'><span class="c1">//&lt;Router location=&quot;hash&quot;&gt;&lt;/Router&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">Provider</span> <span class="nx">store</span><span class="o">=</span><span class="p">{</span><span class="nx">store</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">Router</span> <span class="nx">history</span><span class="o">=</span><span class="p">{</span><span class="nx">history</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="s2">&quot;/&quot;</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">App</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/Route&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">Route</span> <span class="nx">path</span><span class="o">=</span><span class="s2">&quot;/buy&quot;</span> <span class="nx">component</span><span class="o">=</span><span class="p">{</span><span class="nx">Buy</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/Route&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/Router&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/Provider&gt;,</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">root</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>
We can see how to generate redux store below and bind with react.</p>

<h2>2. redux apply http request middleware and create store</h2>

<p>Redux <code>createStore</code> can only  handle synchronize action like the todo app, we using <a href="http://redux.js.org/docs/advanced/Middleware.html">redux middleware</a> to handle async action like ajax or some what.
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="kr">import</span> <span class="p">{</span> <span class="nx">createStore</span><span class="p">,</span> <span class="nx">compose</span><span class="p">,</span> <span class="nx">applyMiddleware</span><span class="p">,</span> <span class="nx">combineReducers</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">redux</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="kr">import</span> <span class="nx">rootReducer</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="nx">reducers</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="kr">import</span> <span class="nx">apiMiddleware</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="nx">middlewares</span><span class="o">/</span><span class="nx">apiMiddleware</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">create</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">devToolsExtension</span>
</span><span class='line'>    <span class="o">?</span> <span class="nb">window</span><span class="p">.</span><span class="nx">devToolsExtension</span><span class="p">()(</span><span class="nx">createStore</span><span class="p">)</span>
</span><span class='line'>    <span class="o">:</span> <span class="nx">createStore</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="kr">const</span> <span class="nx">finalCreateStore</span> <span class="o">=</span> <span class="nx">compose</span><span class="p">(</span>
</span><span class='line'>    <span class="nx">applyMiddleware</span><span class="p">(</span><span class="nx">apiMiddleware</span><span class="p">)</span>
</span><span class='line'>  <span class="p">)(</span><span class="nx">create</span><span class="p">)</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="c1">// const store = create(rootReducer, initialState)</span>
</span><span class='line'>  <span class="kr">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">finalCreateStore</span><span class="p">(</span><span class="nx">rootReducer</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>
here we create redux store, and bind to react, then how can we bind the redux state and action to react, look below, using <a href="http://redux.js.org/docs/api/bindActionCreators.html">redux connect and bindActionCreators</a></p>

<h2>3. bind redux state and actions with react this.props</h2>

<p>container/Buy/index.js
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">Component</span><span class="p">,</span> <span class="nx">PropTypes</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">react</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">bindActionCreators</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">redux</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">connect</span> <span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">react</span><span class="o">-</span><span class="nx">redux</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">Coins</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="p">..</span><span class="o">/</span><span class="nx">actions</span><span class="o">/</span><span class="nx">coins</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">style</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;.</span><span class="o">/</span><span class="nx">style</span><span class="p">.</span><span class="nx">css</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">Header</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="p">..</span><span class="o">/</span><span class="nx">components</span><span class="o">/</span><span class="nx">Header</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">Footer</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="p">..</span><span class="o">/</span><span class="nx">components</span><span class="o">/</span><span class="nx">Footer</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">class</span> <span class="nx">Buy</span> <span class="kr">extends</span> <span class="nx">Component</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">const</span> <span class="p">{</span> <span class="nx">actions</span><span class="p">,</span> <span class="nx">children</span><span class="p">,</span> <span class="nx">storage</span> <span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">div</span><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">Header</span> <span class="o">/&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="nx">Footer</span> <span class="o">/&amp;</span><span class="nx">gt</span><span class="p">;</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="err">/div&amp;gt;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">mapStateToProps</span><span class="p">(</span><span class="nx">state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">storage</span><span class="o">:</span> <span class="nx">state</span><span class="p">.</span><span class="nx">coins</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">mapDispatchToProps</span><span class="p">(</span><span class="nx">dispatch</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">actions</span><span class="o">:</span> <span class="nx">bindActionCreators</span><span class="p">(</span><span class="nx">Coins</span><span class="p">,</span> <span class="nx">dispatch</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">export</span> <span class="k">default</span> <span class="nx">connect</span><span class="p">(</span>
</span><span class='line'>  <span class="nx">mapStateToProps</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">mapDispatchToProps</span>
</span><span class='line'><span class="p">)(</span><span class="nx">Buy</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>we can bind redux state the react components or just html5 pages- <code>mapStateToProps</code>, developers can dispatch actions or reading data from <code>this.props</code>, and the parent props can pass sub data using <code>this.props</code></p>

<h2>4. simple reducers describe state change process</h2>

<p>reducers/account.jsx
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">import</span> <span class="nx">ActionTypes</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="nx">constants</span><span class="o">/</span><span class="nx">ActionTypes</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">const</span> <span class="nx">initState</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">accountReady</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">accountError</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">account</span><span class="o">:</span> <span class="p">{}</span>
</span><span class='line'><span class="p">};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">account</span><span class="p">(</span><span class="nx">state</span> <span class="o">=</span> <span class="nx">initState</span><span class="p">,</span> <span class="nx">action</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">switch</span> <span class="p">(</span><span class="nx">action</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span><span class="nx">state</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">accountReady</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD_SUCCESS</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span><span class="nx">state</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">account</span><span class="o">:</span> <span class="nx">action</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">accountReady</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">accountError</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD_ERROR</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>        <span class="o">&amp;</span><span class="nx">hellip</span><span class="p">;</span><span class="nx">state</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">account</span><span class="o">:</span> <span class="nx">action</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">accountReady</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">accountError</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">state</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<h2>5. sync actions and async actions</h2>

<p>actions/account.jsx
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">import</span> <span class="nx">ActionTypes</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="nx">constants</span><span class="o">/</span><span class="nx">ActionTypes</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="p">{</span><span class="nx">requestBase</span><span class="p">,</span> <span class="nx">baseAPI</span><span class="p">}</span> <span class="nx">from</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;..</span><span class="o">/</span><span class="nx">app</span><span class="o">/</span><span class="nx">configs</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kr">export</span> <span class="kd">function</span> <span class="nx">loadAccount</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">types</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD_SUCCESS</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">ActionTypes</span><span class="p">.</span><span class="nx">ACCOUNT_LOAD_ERROR</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nx">requestSettings</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">GET</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span><span class='line'>      <span class="nx">url</span><span class="o">:</span> <span class="nx">requestBase</span><span class="p">.</span><span class="nx">lianCoinUrl</span> <span class="o">+</span> <span class="nx">baseAPI</span><span class="p">.</span><span class="nx">me</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">requestParams</span><span class="o">:</span> <span class="p">{</span><span class="nx">Includes</span><span class="o">:</span><span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Accounts</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Profile</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">BankCards</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Reducers only describe the data transfer process which how state A transfers to state B, and then the react components re-renders the view.
Sync actions just like so, then reducers can change the state immediately
<code>javascript
export function filterAccount() {
  return {
    type: ActionTypes.ACCOUNT_FILTER
  }
}
</code></p>

<p>async actions should supply request url, method, params and so on
<code>javascript
export function loadAccount() {
  return {
    types: [
      ActionTypes.ACCOUNT_LOAD,
      ActionTypes.ACCOUNT_LOAD_SUCCESS,
      ActionTypes.ACCOUNT_LOAD_ERROR
    ],
    requestSettings: {
      method: 'GET',
      url: requestBase.lianCoinUrl + baseAPI.me
    },
    requestParams: {Includes:['Accounts','Profile','BankCards']}
  }
}
</code></p>

<h2>6. redux http middleware</h2>

<p>async actions generally has there types <code>[load, success, error]</code> correspond to the actions in <code>middlewares/apiMiddleware.js</code>  <code>const [PENDING, FULFILLED, REJECTED] = action.types</code>,
the the middleware do request using <code>superagent</code> or some other http request library you like,  the callback can dispatch actions afterwards, the next is just redux <code>dispatch</code>, above in the <code>containers/Buy/index.js</code> we bind <code>dispatch</code> to the async action creator <code>bindActionCreators(Coins, dispatch)</code>
<code>javascript
        case 'GET': {
          return superagent.get(url + '&amp;' + querystring.stringify(params))
            .end((err, res) =&gt; {
              if(err || !res.body) {
                next({
                  type: REJECTED,
                  params
                })
              } else {
                next({
                  type: FULFILLED,
                  params,
                  data: res.body.data
                })
              }
            })
        }
</code></p>

<p>then reducers still accept actions and change the state, and afterwards react re-render views.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello]]></title>
    <link href="http://zealot09.github.io/blog/2014/10/15/hello/"/>
    <updated>2014-10-15T15:02:52+08:00</updated>
    <id>http://zealot09.github.io/blog/2014/10/15/hello</id>
    <content type="html"><![CDATA[<h1>Welcome to my blog!</h1>

<p>It&rsquo;s been a long time since my last wordpress blog dropped down. Thanks the <strong>terrible</strong> US VPS I&#8217;v been always using, it just dropped down before I transferred my important backups.</p>

<p>Put it aside, I didn&rsquo;t want to write blogs for a long time since the accident. It&rsquo;s popular setting a blog using github pages &amp; jekyll because of github&rsquo;s free static pages hosting service and powerful</p>

<p>CDN service. So just a new try!</p>
]]></content>
  </entry>
  
</feed>
